// function isIsoscelesTriangle(a, b, c) {
//   return a === b || a === c || b === c;
// }

// console.log('ky');
// console.log(isIsoscelesTriangle(1, 2, 5));

// Арабские ==> римские . решение 1
// const font_ar = [1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000, 4000, 5000, 9000, 10000];
// const font_rom = ["I", "IV", "V", "IX", "X", "XL", "L", "XC", "C", "CD", "D", "CM", "M",
//   "M&#8577;", "&#8577;", "&#8577;&#8578;", "&#8578;"];

// function convertToRomanNumerals(num) {
//   if (!num) return "";
//   let rezult = "";
//   let n = font_ar.length - 1;
//   let a = num;

//   while (a > 0) {
//     if (a >= font_ar[n]) {
//             console.log(`rezult = ${rezult}`);

//       rezult += font_rom[n];
//       console.log(`num = ${a}`);

//       a -= font_ar[n];
//     }
//     else {
//       n--;
//       console.log(n);
//     }
//   }
//   return rezult;
// }

// console.log(convertToRomanNumerals(4));
// console.log(convertToRomanNumerals(6));

// Арабские ==> римские . решение 2
// const font_ar = [10000, 9000, 5000, 4000, 1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];
// const font_rom = ["&#8578;", "&#8577;&#8578;", "&#8577;", "M&#8577;", "M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I",];

// const convertToRomanNumerals = (num) => {
// let result = "";
// font_ar.forEach((item, index) => {
//   while (num >= item) {
//     result += font_rom[index];
//     num = num - item;

//     console.table ({
//       "num": num + item,
//       "item": item,
//       "num = num - item": num,
//       "result": result
//     });
//     // debugger;
//   }
// });
// return result;
// }

// console.log(convertToRomanNumerals(640));

// Арабские ==> римские . решение 2
// const rom_arab = {
//   "&#8578;": 10000,
//   "&#8577;&#8578;": 9000,
//   "&#8577;": 5000,
//   "M&#8577;": 4000,
//   "M": 1000,
//   "CM": 900,
//   "D": 500,
//   "CD": 400,
//   "C": 100,
//   "XC": 90,
//   "L": 50,
//   "XL": 40,
//   "X": 10,
//   "IX": 9,
//   "V": 5,
//   "IV": 4,
//   "I": 1
// };

// const convertToRomanNumerals = (num) => {
//   let result = "";
//   for (let key in rom_arab) {
//     while (num >= rom_arab[key]) {
//       result += key;
//       num = num - rom_arab[key];
//     }
//   }

//   return result;
// }

// console.log(convertToRomanNumerals(160));

// function convertNumberToString(numberStr) {
//   const numbers = {
//     0: 'zero',
//     1: 'one',
//     2: 'two',
//     3: 'three',
//     4: 'four',
//     5: 'five',
//     6: 'six',
//     7: 'seven',
//     8: 'eight',
//     9: 'nine',
//     '.': 'point',
//     '-': 'minus',
//   };

//   const num = String(numberStr);
//   let result = '';

//   for (let i = 0; i < num.length; i += 1) {
//     if (numbers[num[i]]) {  // Проверяем, есть ли символ в объекте
//       result += `${numbers[num[i]]} `;
//     }
//   }
//   return result;
// }

//  for (const key in numbers) {

//     // console.table({
//     //   // 'i': i,
//     //   // 'key': key,
//     //   'num': num[i],
//     // })
//     if (num[i] === key) {
//       result += `${numbers[key]} `;
//       break;
//     }
//   }
// }

//   return result;
// }

// function convertNumberToString(numberStr) {
//   const num = String(numberStr);
//   let result = '';

//   for (let i = 0; i < num.length; i += 1) {
//     switch (num[i]) {
//       case '0':
//         result += 'zero';
//         break;
//       case '1':
//         result += 'one';
//         break;
//       case '2':
//         result += 'two';
//         break;
//       case '3':
//         result += 'three';
//         break;
//       case '4':
//         result += 'four';
//         break;
//       case '5':
//         result += 'five';
//         break;
//       case '6':
//         result += 'six';
//         break;
//       case '7':
//         result += 'seven';
//         break;
//       case '8':
//         result += 'eight';
//         break;
//       case '9':
//         result += 'nine';
//         break;
//       case '.':
//         result += 'point';
//         break;
//       case '-':
//         result += 'minus';
//         break;
//       default:
//         result += '';
//         break;
//     }
//     if (i !== num.length - 1) {
//       result += ' ';
//     }
//   }
//   return result;
// }

// // convertNumberToString(-1023.5);
// console.log(convertNumberToString(-1023.5));



// function getBalanceIndex(arr) {
//   let leftSum = 0;
//   let totalSum = 0;
//   if (!arr) {
//     return -1;
//   }
//   const n = arr.length;

//   for (let i = 0; i < n; i += 1) {
//     totalSum += arr[i];
//   }

//   for (let i = 0; i < n; i += 1) {
//     const rightSum = totalSum - leftSum - arr[i];
//     if (leftSum === rightSum) {
//       return i;
//     }
//     leftSum += arr[i];
//   }
//   return -1;
// }

// console.log(getBalanceIndex(1, 2, 5, 3, 0));
// console.log(getBalanceIndex(2, 3, 9, 5));
// console.log(getBalanceIndex(1, 2, 3, 4, 5));
// console.log(getBalanceIndex(1, 1));
// console.log(getBalanceIndex(1, 2, 3, 4, 5, 6, 7, 8, 9));
// console.log(getBalanceIndex());

// function getSpiralMatrix(size) {
//   let top = 0;
//   let bottom = size - 1;
//   let left = 0;
//   let right = size - 1;
//   let num = 0;
//   // Создаем массив заданной размерности и заполняем его нулями
//   const matrix = Array(size).fill(0).map(() => Array(size).fill(0));

//   while (top <= bottom && left <= right) {
//     // Движение вправо
//     for (let i = left; i <= right; i += 1) {
//       num += 1;
//       matrix[top][i] = num;
//     }
//     top += 1;

//     // Движение вниз
//     for (let i = top; i <= bottom; i += 1) {
//       num += 1;
//       matrix[i][right] = num;
//     }
//     right -= 1;

//     // Движение влево
//     if (top <= bottom) {
//       // Проверка, чтобы избежать повторного заполнения
//       for (let i = right; i >= left; i -= 1) {
//         num += 1;
//         matrix[bottom][i] = num;
//       }
//       bottom -= 1;
//     }

//     // Движение вверх
//     if (left <= right) {
//       // Проверка, чтобы избежать повторного заполнения
//       for (let i = bottom; i >= top; i -= 1) {
//         num += 1;
//         matrix[i][left] = num;
//       }
//       left += 1;
//     }
//   }
//   return matrix;
// }


// function transpose(matrix) {
//   const rows = matrix.length;
//   const cols = matrix[0].length;
//   const transposed = [];

//   for (let j = 0; j < cols; j++) {
//     transposed[j] = [];
//     for (let i = 0; i < rows; i++) {
//       transposed[j][i] = matrix[i][j];
//     }
//   }
//   console.log(transposed);

// const rotated = transposed.map(row => row.reverse());
// // Переворачиваем каждую строку
// return rotated;
// }

function transpose(matrix) {
   let result = [];
  for (let i = matrix.length - 1; i >= 0; i--) {
    for (let j = 0; j < matrix[i].length; j++) {
      if (!result[j]) {
        result[j] = [];
      }
      result[j].push(matrix[i][j]);
    }
  }
  return result;
}

const matrix = [
  [1, 2, 3, 4, 5],
  [6, 7, 8, 9, 10,],
  [11, 12, 13, 14, 15],
  [16, 17, 18, 19, 20],
  [21, 22, 23, 24, 25],
];

let arr = [
  [1, 2, 3],
  [4, 5, 6],
  [7, 8, 9],
];

// console.log(transpose(matrix));
console.log(transpose(arr));

// transpose(arr)
